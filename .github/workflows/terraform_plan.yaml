name: Terraform Plan
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    
jobs:

  Terraform-Plan:
    env:
        ARM_CLIENT_ID: ${{ secrets.az_client_id }}
        ARM_CLIENT_SECRET: ${{ secrets.az_client_secret }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.az_subscription_id }}
        ARM_TENANT_ID: ${{ secrets.az_tenant_id }}
    runs-on: ubuntu-20.04
    
    steps:
    - uses: actions/checkout@v2
    - uses: hashicorp/setup-terraform@v1.2.1
      with:
        cli_config_credentials_hostname: app.terraform.io
        cli_config_credentials_token: ${{ secrets.TF_TOKEN }}
        terraform_version: 0.13.5
      
    - name: Terraform fmt
      id: fmt
      run: terraform fmt -recursive

    - name: Terraform Init
      id: init
      run: terraform init -no-color

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color

      
    - uses: actions/github-script@0.9.0
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
          
          <details><summary>GitHub Plan</summary>

          \`\`\`${process.env.PLAN}\`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;

          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
            
    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1  
